stages:
  - check
  - test
  - publish

check:lint:
  stage: check
  image: docker.autopage.inf.br/infra/packager:latest
  tags:
    - docker
    - php7
  script:
    - find -L . -regextype posix-egrep -regex '.*\.(php)$' -type f -not -path "./vendor/*" -print0 | xargs -0 -n1 -P 4 php -l -d short_open_tag=On

check:static:
  stage: check
  image: docker.autopage.inf.br/infra/packager:latest
  tags:
    - docker
    - php7
  cache:
    key: pgsearch-${CI_COMMIT_REF_SLUG}
    policy: push
    paths:
      - vendor/
  script:
    - composer install -o
    - ./vendor/bin/phpstan analyse --no-progress --memory-limit='-1' --error-format=junit src/ > ./report.xml
  artifacts:
    expire_in: 6 months
    when: always
    reports:
      junit: report.xml

check:style:
  stage: check
  image: docker.autopage.inf.br/infra/packager:latest
  tags:
    - docker
    - php7
  cache:
    key: pgsearch-${CI_COMMIT_REF_SLUG}
    policy: push
    paths:
      - vendor/
  script:
    - composer install -o
    - ./vendor/bin/phpcs -n -p -s --report-summary --report-source --report-junit=report.xml --extensions=php ./src ./tests
  artifacts:
    expire_in: 6 months
    when: always
    reports:
      junit: report.xml

test:unit:
  stage: test
  image: docker.autopage.inf.br/infra/packager:latest
  services:
    - postgres:latest
  tags:
    - php7
    - docker
  cache:
    key: pgsearch-${CI_COMMIT_REF_SLUG}
    policy: pull
    paths:
      - vendor/
  variables:
    POSTGRES_DB: pgsearch
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: "123"
    db_dsn: "postgres://runner:123@postgres/pgsearch?encoding=utf8"
    CACHE_DEFAULT_URL: "array:///?prefix=default_"
    CACHE_CAKECORE_URL: "array:///?prefix=core_"
    CACHE_CAKEMODEL_URL: "array:///?prefix=model_"
    CACHE_CAKEROUTES_URL: "array:///?prefix=routes_"
    CACHE_THROTTLE_URL: "array:///?prefix=throttle_"
  script:
    - composer install -n -o
    - ./vendor/bin/phpunit --coverage-text --log-junit="./report.xml"
  artifacts:
    expire_in: 6 months
    when: always
    reports:
      junit: report.xml

release:
  stage: publish
  image: docker.autopage.inf.br/infra/packager:latest
  tags:
    - php7
    - docker
  script:
    - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data tag=$CI_COMMIT_TAG "https://git.autopage.inf.br/api/v4/projects/$CI_PROJECT_ID/packages/composer"'
  only:
    - tags
